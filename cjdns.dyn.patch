diff -up ./node_build/make.js.dyn ./node_build/make.js
--- ./node_build/make.js.dyn	2018-04-18 03:35:41.000000000 -0400
+++ ./node_build/make.js	2018-06-28 13:50:51.922657841 -0400
@@ -256,48 +256,9 @@ Builder.configure({
 
     }).nThen(function (waitFor) {
 
-        builder.config.libs.push(dependencyDir + '/cnacl/jsbuild/libnacl.a');
-        builder.config.includeDirs.push(dependencyDir + '/cnacl/jsbuild/include/');
-
-        // needed for Sign.c which pulls in crypto_int32.h
-        builder.config.includeDirs.push(dependencyDir + '/cnacl/jsbuild/include_internal/');
-
-        Fs.exists(dependencyDir + '/cnacl/jsbuild/libnacl.a', waitFor(function (exists) {
-            if (exists) { return; }
-
-            console.log("Build NaCl");
-            var cwd = process.cwd();
-            process.chdir(dependencyDir + '/cnacl/');
-
-            var NaCl = require(process.cwd() + '/node_build/make.js');
-            NaCl.build(function (args, callback) {
-                if (builder.config.systemName !== 'win32') {
-                    args.unshift('-fPIC');
-                }
-
-                args.unshift(builder.config.optimizeLevel, '-fomit-frame-pointer');
-
-                if (!/^\-O0$/.test(builder.config.optimizeLevel)) {
-                    args.unshift('-D_FORTIFY_SOURCE=2');
-                }
-
-                if (CFLAGS) {
-                    [].push.apply(args, CFLAGS.split(' '));
-                }
-
-                if (!builder.config.crossCompiling) {
-                    if (NO_MARCH_FLAG.indexOf(process.arch) == -1) {
-                        args.unshift('-march=native');
-                    }
-                }
-
-                builder.cc(args, callback);
-            },
-            builder.config,
-            waitFor(function () {
-                process.chdir(cwd);
-            }));
-        }));
+        builder.config.libs.push('-lnacl');
+        builder.config.libs.push('-lstdc++');
+        builder.config.includeDirs.push('/usr/include/nacl/');
 
     }).nThen(function (waitFor) {
 
@@ -442,7 +403,7 @@ Builder.configure({
     builder.buildExecutable('crypto/random/randombytes.c');
 
     builder.lintFiles(function (fileName, file, callback) {
-        if (/dependencies/.test(fileName)) {
+        if (/(dependencies|\/usr\/include)/.test(fileName)) {
             callback('', false);
             return;
         }
