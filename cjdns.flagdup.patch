diff -up ./node_build/builder.js.flagdup ./node_build/builder.js
--- ./node_build/builder.js.flagdup	2020-10-05 17:46:19.000000000 -0400
+++ ./node_build/builder.js	2023-01-30 08:53:34.523601463 -0500
@@ -182,7 +182,7 @@ const cc = function (
 ) {
     compiler(ctx, args, function (ret, out, err) {
         if (ret) {
-            return callback(error("gcc " + args.map(String).join(' ') + "\n\n" + err));
+            return callback(error(ctx.config.gcc + " " + args.map(String).join(' ') + "\n\n" + err));
         }
 
         if (err !== '') {
@@ -779,7 +779,7 @@ module.exports.configure = function (
     // if it returns undefined let's just assume 1
     // workaround, nodejs seems to be broken on openbsd (undefined result after second call)
     const cpus = Os.cpus();
-    const jobs = Math.floor((typeof cpus === 'undefined' ? 1 : cpus.length) * 1.25);
+    const jobs = 1;
 
     const pctx /*:Builder_PreCtx_t*/ = {
         buildStage: (_x,_y)=>{},
diff -up ./node_build/make.js.flagdup ./node_build/make.js
--- ./node_build/make.js.flagdup	2023-01-30 08:52:38.366691391 -0500
+++ ./node_build/make.js	2023-01-30 08:52:38.539694195 -0500
@@ -41,7 +41,6 @@ Builder.configure({
         '-std=c99',
         '-Wall',
         '-Wextra',
-        '-Werror',
         '-Wno-pointer-sign',
         '-Wmissing-prototypes',
         '-pedantic',
@@ -91,7 +90,7 @@ Builder.configure({
 
     if (!builder.config.crossCompiling) {
         if (NO_MARCH_FLAG.indexOf(process.arch) == -1) {
-            builder.config.cflags.push('-march=native');
+            builder.config.cflags.push('-mtune=generic');
         }
     }
 
@@ -151,7 +150,7 @@ Builder.configure({
             } else if (/^\-O[02s]$/.test(flag)) {
                 optimizeLevel = flag;
             } else {
-                [].push.apply(builder.config.cflags, cflags);
+                builder.config.cflags.push(flag);
             }
         });
     }
